<apex:component controller="TodoListService">
	<head>
		<meta charset="utf-8" />
		<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" />
		<title>Knockout.js â€¢ TodoMVC</title>
		
	</head>
	<body id="todoappbody">
		<section id="todoapp">
			<header id="header">
				<h1>todos</h1>
				<input id="new-todo" data-bind="value: current, valueUpdate: 'afterkeydown', enterKey: add" placeholder="What needs to be done?" autofocus="true" />
			</header>
			<section id="main" data-bind="visible: todos().length">
				<input id="toggle-all" data-bind="checked: allCompleted" type="checkbox" />
				<label for="toggle-all">Mark all as complete</label>
				<ul id="todo-list" data-bind="foreach: {data: filteredTodos, as: 'todo'}">
					<li data-bind="css: { completed: completed, editing: editing }">
						<div class="view">
							<input class="toggle" data-bind="checked: completed" type="checkbox" />
							<label data-bind="text: title, event: { dblclick: $root.editItem }"></label>
							
							<div class="btn-group assignee" >
								<a class="btn btn-primary btn-mini" href="#"><i class="icon-user icon-white"></i> <span data-bind="text: assignee() != null ? assignee().name : ''"></span></a>
								<a class="btn btn-primary btn-mini dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>
								<ul class="dropdown-menu" data-bind="foreach: {data: $root.contacts, as: 'contact'}">
									 <li><a href="#" data-bind="click: $root.assignContact.bind($data, todo, contact)"><i class="icon-user"></i> <span data-bind="text: name"></span></a></li>
								</ul>
							</div>
							<div class="assignee-readonly">
								<i class="icon-user icon-black"></i> <span data-bind="text: assignee() != null ? assignee().name : ''"></span>
							</div>
							<button class="destroy" data-bind="click: $root.remove"></button>
						</div>
						<input class="edit" data-bind="value: title, valueUpdate: 'afterkeydown', enterKey: $root.stopEditing, selectAndFocus: editing, event: { blur: $root.stopEditing }" />
					</li>
				</ul>
			</section>
			<footer id="footer" data-bind="visible: completedCount() || remainingCount()">
				<span id="todo-count">
					<strong data-bind="text: remainingCount">0</strong>
					<span data-bind="text: getLabel( remainingCount )"></span> left
				</span>
				<ul id="filters">
					<li>
						<a data-bind="css: { selected: showMode() == 'all' }" href="#/all">All</a>
					</li>
					<li>
						<a data-bind="css: { selected: showMode() == 'active' }" href="#/active">Active</a>
					</li>
					<li>
						<a data-bind="css: { selected: showMode() == 'completed' }" href="#/completed">Completed</a>
					</li>
				</ul>
				<button id="clear-completed" data-bind="visible: completedCount, click: removeCompleted">
					Clear completed (<span data-bind="text: completedCount"></span>)
				</button>
			</footer>
		</section>
		<footer id="info">
			<p>Double-click to edit a todo</p>
			<p>Original Knockout version from <a href="https://github.com/ashish01/knockoutjs-todos">Ashish Sharma</a></p>
			<p>Rewritten to use Knockout 2.0 and standard template by <a href="http://knockmeout.net">Ryan Niemeyer</a></p>
			<p>Patches/fixes for cross-browser compat: <a href="http://twitter.com/addyosmani">Addy Osmani</a></p>
			<p>Part of <a href="http://todomvc.com">TodoMVC</a></p>
		</footer>
	</body>
	<script>
		window.todo = {};
		window.todo.loadTodoList = function(callback){
			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.TodoListService.getTodoList}',
				function(result, event){
					if(event.type == 'exception'){
						alert('Your session has timed out.');
					}
					if(event.status){
						callback.apply(this, [result]);
					}
					else{
						console.log('error');
						console.log(result);
					}
				},
				{escape: true} );
		};
		window.todo.persistTodoList = function(todos, callback){
			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.TodoListService.saveTodoList}',
				_.map(ko.toJS(todos()), function(value, key, list){
					return value;
				}),
				function(result, event){
					if(event.type == 'exception'){
						alert('Your session has timed out.');
					}
					if(event.status){
						callback.apply(this, [result]);
					}
					else{
						console.log('error');
						console.log(result);
					}
				},
				{escape: true} );
		};
		window.todo.loadContacts = function(callback){
			Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.TodoListService.getContacts}',
				function(result, event){
					if(event.type == 'exception'){
						alert('Your session has timed out.');
					}
					if(event.status){
						callback.apply(this, [result]);
					}
					else{
						console.log('error');
						console.log(result);
					}
				},
				{escape: true} );
		};
	</script>
	<apex:includeScript value="{!URLFOR($Resource.app)}" />
</apex:component>